* Publishing
** Project layout

Because of how GitHub pages work, we have the code and the site on different branches (=literate.dev= and =literate.stable=, and =gh-pages= respectively).

Since we are publishing from the =literate.*= branches, we need a different target than the current directory, so things don't get overwritten and Git won't complain when trying to change branches.

So I have:

- The =dev= directory pointing to the =literate.dev= branch (from which I release to =literate.stable= when it's time to release).
- And the =dev.doc= directory pointing to the =github-pages= branch.

So assuming you've already cloned the repo and you are in its directory, run the following command:

#+begin_src shell
  git clone -b generated-documentation git@github.com:jakub-stastny/dev.git ../dev.doc
#+end_src

That's it! Now let's set up the publisher.

** Setup
*** Orgmode publishing
   :PROPERTIES:
   :CUSTOM_ID: publishing-script
   :END:

#+begin_src emacs-lisp :tangle .env/elisp/autoload/publish.el :mkdirp yes :results silent
  (require 'ox-publish)

  (setq org-publish-project-alist `(
    ("dev"
      :components ("dev/documentation" "dev/static"))

    ("dev/documentation"
      :base-directory "~/dev"
      :base-extension "org"
      :publishing-directory "~/dev.doc/docs"
      :recursive t
      :publishing-function org-html-publish-to-html
      :headline-levels 4
      :auto-preamble t)

    ("dev/static"
      :base-directory "~/dev"
      :base-extension "css\\|png\\|jpg" ; TODO: do it dynamically, it doesn't seem to be able to take globs.
      :publishing-directory "~/dev.doc/docs"
      :recursive t
      :publishing-function org-publish-attachment)))

  (defun after-publish (fname-original fname-exported)
    (when (equal (file-name-base fname-original) "README")
      (message "Changing README.html -> index.html")
      (rename-file fname-exported (replace-regexp-in-string "README" "index" fname-exported t))))

  (setq org-publish-after-publishing-hook 'after-publish)
#+end_src

**** TODO Take some ideas from these

- https://pavpanchekha.com/blog/org-mode-publish.html

** Stylesheets

#+begin_src css :tangle styles.css
  html {
    font-family: Helvetica;
  }

  .src {
    background-color: floralwhite;
  }
#+end_src

** Development

GitHub pages cache doesn't get invalidated on push to the GitHub pages branch (=gh-pages= in this case).

#+begin_src shell
  (cd ../dev.doc/docs && python -m SimpleHTTPServer 8080)
#+end_src
