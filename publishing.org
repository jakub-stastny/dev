* Publishing
** Setup
** Project layout
Because switching between two totaly different branches is very cumbersome, it's easier to clone the repo twice:

- With the =dev= directory pointing to the =master= branch.
- And the =dev.doc= directory pointing to the =generated-documentation= branch.

So assuming you've already cloned the repo and you are in its directory, you need to run the following command:

#+begin_src shell
  git clone -b generated-documentation git@github.com:jakub-stastny/dev.git ../dev.doc
#+end_src

*** Orgmode publishing
   :PROPERTIES:
   :CUSTOM_ID: publishing-script
   :END:

#+begin_src emacs-lisp :tangle .env/elisp/autoload/publish.el :mkdirp yes :results silent
  (require 'ox-publish)

  (setq org-publish-project-alist `(
    ("dev"
      :components ("dev/documentation" "dev/static"))

    ("dev/documentation"
      :base-directory "~/dev"
      :base-extension "org"
      :publishing-directory "~/dev.doc"
      :recursive t
      :publishing-function org-html-publish-to-html
      :headline-levels 4
      :auto-preamble t)

    ("dev/static"
      :base-directory "~/dev"
      :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\"
      :publishing-directory "~/dev.doc"
      :recursive t
      :publishing-function org-publish-attachment)))
#+end_src

** Exporting
Since there's only one page, we just need =C-c C-e= (=org-export-dispatch=) and then rename =Dockerfile.html= to =index.html=. Commit on =generated-documentation= branch.

** Stylesheets
#+begin_src css :tangle ../dev.doc/styles.css
  html {
    font-family: Helvetica;
  }

  .src {
    background-color: floralwhite;
  }
#+end_src

** Development
GitHub pages cache doesn't get invalidated on push to the GitHub pages branch (=generated-documentation= in this case).

#+begin_src shell
  cd ..
  python -m SimpleHTTPServer 8080
#+end_src

** Pending matters
*** TODO Publishing workflows

*** TODO This won't work, since we use /dev/ on GH pages.
#+begin_src shell
  # clone the branch to a different directory
  Elisp fn: switch them there and back
#+end_src
